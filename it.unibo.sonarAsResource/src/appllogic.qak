/*
 * sonarResource.qak
 * A CoAP-observable component
 * 1) launch sonarresource
 * 2) launch SonarresourceObserver or SonarresourceObserverRadar
 * 3a) launch SimulateSonarData that reads  data from the user console and emits the event 
 *             msg(sonarrobot,event,support,none,sonar(data),1)
 * 3b) launch on Raspberry an emitter of sonarRobot event e.g. sonar in sonarnaive.qak
 *    that launches a CodedQactor that reads data from SonarAlone and emits the event
 * 	            msg(sonarrobot,event,sonarHCSR04Support,none,sonar(data),1)
 */ 
   
System /* -trace */ appllogic 
//mqttBroker "192.168.1.45" : 1883  eventTopic "sonar/data"		//broker.hivemq.com

 
Event    alarm      : alarm(X)

Event    sonarrobot : sonar( V )
Dispatch sonarrobot : sonar( V )
Request  sonarrobot : sonar( V )
Reply    replysonar : updated(V)

/* 
Context ctxappllogic ip [ host= "192.168.1.45"   port= 8028 ]

QActor appllogic context ctxappllogic{ 
	State s0 initial{  
		//println("appllogic start") 
	}
	//Goto work
	 
 }
*/
 